// <auto-generated />
using System;
using BadTakeStream.Shared.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BadTakeStream.Shared.Migrations
{
    [DbContext(typeof(BadTakeContext))]
    partial class BadMemeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BadMemeStream.Models.Score", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("Count")
                        .HasColumnType("bigint");

                    b.Property<string>("UserDisplayName")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("BadMemeStream.Models.Tweet", b =>
                {
                    b.Property<long>("TwitterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<long?>("InReplyToTwitterId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("TwitterId");

                    b.HasIndex("InReplyToTwitterId");

                    b.ToTable("Tweets");
                });

            modelBuilder.Entity("BadMemeStream.Models.Tweet", b =>
                {
                    b.HasOne("BadMemeStream.Models.Tweet", "InReplyTo")
                        .WithMany("Replies")
                        .HasForeignKey("InReplyToTwitterId");
                });
#pragma warning restore 612, 618
        }
    }
}
